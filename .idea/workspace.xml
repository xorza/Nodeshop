<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="79f3a648-20a6-4fc7-a315-0d66cfd38431" name="Changes" comment="shader in dev">
      <change beforePath="$PROJECT_DIR$/Imaginarium/src/wgpu/tests/shader.wgsl" beforeDir="false" afterPath="$PROJECT_DIR$/Imaginarium/src/wgpu/tests/shader.wgsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Imaginarium/src/wgpu/wgpu_context.rs" beforeDir="false" afterPath="$PROJECT_DIR$/Imaginarium/src/wgpu/wgpu_context.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="xxorza &lt;1442523+xorza@users.noreply.github.com&gt;" />
      </list>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="separate_runtime_and_invoker" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="MIXED" />
    <option name="SIGN_OFF_COMMIT" value="true" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="5if6p4vb" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2RMsVGfUwa964FuwttmRj2vedOK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "cidr.known.project.marker": "true",
    "deletionFromPopupRequiresConfirmation": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/xxorza/Projects/Nodeshop/Imaginarium/src/tests",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.hideNoCargoProjectNotifications/Users/xxorza/Projects/Nodeshop/Cargo.toml": "true",
    "org.rust.hideNoCargoProjectNotifications/Users/xxorza/Projects/Nodeshop/egui_node_graph/Cargo.toml": "true",
    "org.rust.hideNoCargoProjectNotifications/Users/xxorza/Projects/Nodeshop/egui_node_graph/egui_node_graph/Cargo.toml": "true",
    "settings.editor.selected.configurable": "preferences.sourceCode.Rust"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "Markdown"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/Imaginarium/src/tests" />
      <recent name="$PROJECT_DIR$/Editor/src" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/Imaginarium/src/wgpu/tests" />
      <recent name="$PROJECT_DIR$/Imaginarium/src/wgpu" />
      <recent name="$PROJECT_DIR$/test_output" />
      <recent name="$PROJECT_DIR$/Graph/src" />
      <recent name="$PROJECT_DIR$/test_resources" />
    </key>
  </component>
  <component name="RsExternalLinterProjectSettings">
    <option name="runOnTheFly" value="true" />
    <option name="tool" value="Clippy" />
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="cargo build --release" />
      <command value="cargo build" />
    </option>
  </component>
  <component name="RunManager" selected="Cargo.Test wgpu::tests::wgpu_tests::it_works">
    <configuration name="All Tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --workspace --exclude egui_node_graph" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="false" />
      <option name="allFeatures" value="true" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test tests::image_tests::image_convertion" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package imaginarium --lib tests::image_tests::image_convertion -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test wgpu::tests::wgpu_tests::it_works" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package imaginarium --lib wgpu::tests::wgpu_tests::it_works -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test wgpu_tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package imaginarium --lib wgpu::tests::wgpu_tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests in 'Imaginarium'" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package imaginarium" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Cargo.Test tests::image_tests::image_convertion" />
      <item itemvalue="Cargo.Test wgpu::tests::wgpu_tests::it_works" />
      <item itemvalue="Cargo.Test wgpu_tests" />
      <item itemvalue="Cargo.Tests in 'Imaginarium'" />
      <item itemvalue="Cargo.All Tests" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.All Tests" />
        <item itemvalue="Cargo.Test wgpu::tests::wgpu_tests::it_works" />
        <item itemvalue="Cargo.Test tests::image_tests::image_convertion" />
        <item itemvalue="Cargo.Test wgpu_tests" />
        <item itemvalue="Cargo.Tests in 'Imaginarium'" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/QtEditor/cmake-build-debug/_deps/googletest-src" />
      <path value="$PROJECT_DIR$/SwiftUIEditor" />
      <path value="$PROJECT_DIR$/egui_node_graph" />
    </ignored-roots>
    <MESSAGE value="wgpu context incapsulation in dev" />
    <MESSAGE value="in progress" />
    <MESSAGE value="binding to enum" />
    <MESSAGE value="invoker in dev" />
    <MESSAGE value="compute in dev" />
    <MESSAGE value="compute finished" />
    <MESSAGE value="Box&lt;dyn Any&gt; context implemented" />
    <MESSAGE value="type clarification" />
    <MESSAGE value="type clarification NodeId" />
    <MESSAGE value="id_type macro" />
    <MESSAGE value="SubGraphId" />
    <MESSAGE value="invokeContext" />
    <MESSAGE value="gh actions fix" />
    <MESSAGE value="egui_node_graph as submodule added" />
    <MESSAGE value="wgpu as feature" />
    <MESSAGE value="gh build fix" />
    <MESSAGE value="--no-default-features" />
    <MESSAGE value="wgpu build feature" />
    <MESSAGE value="clippy fixes" />
    <MESSAGE value="color format" />
    <MESSAGE value="color format and texture in dev" />
    <MESSAGE value="texture read and write" />
    <MESSAGE value="shader refactor" />
    <MESSAGE value="cleanup" />
    <MESSAGE value="shader in dev" />
    <option name="LAST_COMMIT_MESSAGE" value="shader in dev" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
</project>